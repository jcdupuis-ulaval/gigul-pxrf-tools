# -*- coding: utf-8 -*-
"""
Created on Tue Jun 30 09:23:25 2020

@author: debth
"""
"fonctionne qu'avec 5 analyses pour le moment"
import numpy as np
import os

# File setup for data and results################################
rdir = '../results/CSV/merged/'
idir = '../results/peaks/'
cdir = '../results/peaks/Verification/'
# Filter parameters #############################################
flist_raw = os.listdir(path=rdir)
flist_peaks = os.listdir(path=idir)
flist_peaksall = os.listdir(path=cdir)

i=0

#Faire le fichier de travail

for fname in flist_raw:
    raw_data=np.genfromtxt(rdir+fname,delimiter=',')
    peaks = np.genfromtxt(idir+flist_peaks[i],delimiter=',')   
    m,n = peaks.shape
    nanalyse = np.zeros((m,1),dtype=float)
    nanalyse[:,0]= (0+i)
    peaksall = np.column_stack((peaks,nanalyse))
    np.savetxt(cdir+'peaksall-'+fname+'i'+'.csv', peaksall, delimiter=',')
    i=i+1

i=0

#combiner le tout en un seul array
for fname in flist_peaksall:
    full1=np.genfromtxt(cdir+flist_peaksall[i],delimiter=',')
    full2=np.genfromtxt(cdir+flist_peaksall[i+1],delimiter=',')
    full3=np.genfromtxt(cdir+flist_peaksall[i+2],delimiter=',')
    full4=np.genfromtxt(cdir+flist_peaksall[i+3],delimiter=',')
    full5=np.genfromtxt(cdir+flist_peaksall[i+4],delimiter=',')
    npeaks=len(full1)+len(full2)+len(full3)+len(full4)+len(full5)
    full=np.zeros((npeaks,3),dtype=float)
    full_tuple=(full1,full2,full3,full4,full5)
    full=np.vstack(full_tuple)
    fullsort=full[full[:,0].argsort()]
    
#Maintenant on fait une vérification avec le pic du fer de la qualité d'analyse
def find_nearest(array, value):
    array = np.asarray(array)
    idx = (np.abs(array - value)).argmin()
    return array[idx]
x=fullsort[:,0]
pm=np.array([+1,-1])
value=321
output = fullsort[(x>320)&(x<322)]

#Maintenant on regarde l'écart type pour les valeurs trouver 
  
print(np.mean(output[:,1]))
print(np.var(output[:,1]))
print(np.std(output[:,1]))
